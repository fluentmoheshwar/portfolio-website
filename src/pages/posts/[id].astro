---
import { getCollection, render, type CollectionEntry } from "astro:content";
import { FaShare } from "react-icons/fa";
import MainLayout from "../../layouts/Main.astro";
import fs from "fs";
export async function getStaticPaths() {
  const posts: CollectionEntry<"posts">[] = await getCollection("posts");
  return posts.map((post) => ({
    params: { id: post.id },
    props: post,
  }));
}
const post = Astro.props as CollectionEntry<"posts">;
const { Content } = await render(post);

// Calculate reading time (assuming 200 words per minute)
const wordsPerMinute = 200;
const wordCount = post.body ? post.body.split(/\s+/).length : 0;
const readingTimeMinutes = Math.ceil(wordCount / wordsPerMinute);

// Get last modified time
const lastModified = post.filePath
  ? fs.statSync(post.filePath).mtime
  : new Date();
---

<MainLayout
  lang={post.data.lang}
  title={post.data.title}
  description={post.data.description}
  socialImage={post.data.socialImage}
  keywords={post.data.keywords}
>
  <article
    class="prose lg:prose-lg prose-pre:text-left *:text-center sm:flex sm:flex-col sm:items-center sm:gap-4 sm:self-center"
  >
    <h1>{post.data.title}</h1>
    <p class="not-prose text-xl">{post.data.description}</p>
    <p class="not-prose">
      Published on {post.data.publishDate.toLocaleDateString()} • {
        readingTimeMinutes
      } min read • Last modified {lastModified.toLocaleDateString()}
    </p>
    <Content />
    <button
      type="button"
      onclick="share();"
      class="btn mt-4 flex"
      aria-label="Share"><FaShare /> Share</button
    >
  </article>
  <script is:inline>
    const share = () => {
      if (navigator.share) {
        navigator.share({
          title: document.title,
          text: document.querySelector("meta[name=description]").content,
          url: window.location.href,
        });
      } else {
        alert(
          "Web Share API is not supported in your browser or operating system!",
        );
      }
    };
  </script>
</MainLayout>
